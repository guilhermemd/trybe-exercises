1 - Inicie os exercícios criando uma aplicação Node.js com os comandos já aprendidos.
-Crie uma rota GET /ping
- Sua rota deve retornar o seguinte JSON: { message: 'pong' }

2 - Crie uma rota POST /hello
- Sua rota deve receber, no body da requisição, o seguinte JSON: { "name": "<nome do usuário>" }
-Sua rota deve retornar o seguinte JSON: { "message": "Hello, <nome do usuário>!" } .

3 - Crie uma rota POST /greetings
-Sua rota deve receber o seguinte JSON: { "name": "<nome do usuário>", "age": <idade do usuário> } .
-Caso a pessoa usuária tenha idade superior a 17 anos, devolva o JSON { "message": "Hello, <nome do usuário>!" } com o status code 200 - OK .
-Caso a pessoa usuária tenha 17 anos ou menos, devolva o JSON { "message": "Unauthorized" } com o status code 401 - Unauthorized .

4 - Crie uma rota PUT /users/age .:name/:
- Sua rota deve retornar o seguinte JSON: { "message": "Seu nome é <name> e você tem <age> anos de idade" } .

5 - Crie uma API de dados das personagens de Simpsons
- Crie um arquivo chamado simpsons.json e popule com os seguintes dados:
- Utilize o modulo fs do Node para ler/escrever arquivos.
- Caso algum erro ocorra, deve ser retornado um código 500 (Internal Server Error).
- Caso dê tudo certo, a resposta deve voltar com status 200 OK .
- Para testar sua API durante o desenvolvimento, utilize ferramentas que permitem fazer requisições HTTP, como Postman , Insomnia ou httpie .

6 - Crie um endpoint GET /simpsons
- O endpoint deve retornar um array com todos os simpsons.

7 - Crie um endpoint GET /simpsons/:id
- O endpoint deve retornar o personagem com o id informado na URL da requisição.
- Caso não exista nenhum personagem com o id especificado, retorne o JSON { message: 'simpson not found' } com o status 404 - Not Found .